{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n//domain-name.com/ \n//This is our root route. \n// import Layout from '../components/layout/Layout' //NOTE: Moved this to _app.js to wrap our whole componet. \nimport MeetupList from '../components/meetups/MeetupList';\nimport { useEffect, useState } from 'react';\nconst DUMMYDATA = [{\n  id: 'm1',\n  title: 'First Meetup',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/8/89/Parthenon.at.Nashville.Tenenssee.01.jpg',\n  address: '5555 Address ave. Nashville, TN',\n  description: 'Test meet description'\n}, {\n  id: 'm2',\n  title: 'Second Meetup',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/ab/Buildings-1804479_1920.jpg/1280px-Buildings-1804479_1920.jpg',\n  address: '1111 Address ave. Chicage, IL',\n  description: 'Test2 meet description'\n}];\n\nconst HomePage = props => {\n  //Since we are running the 'getStaticProps()' function below, we no longer need to manage state, or use useEffect()\n  // const [loadedMeetups, setLoadedMeetups] = useState([])\n  // useEffect(() => {\n  //     //fetch request\n  //     setLoadedMeetups(DUMMYDATA)\n  // }, [])\n  return /*#__PURE__*/_jsx(MeetupList, {\n    meetups: props.meetups\n  });\n}; //static generation \n//below function only works in our pages. This allows you to load data before rendering \n//this code will never run on our clients side.\n\n\nexport const getStaticProps = async () => {\n  //fetch data from API\n  //you must always return an obj. \n  return {\n    props: {\n      meetups: DUMMYDATA\n    }\n  };\n};\nexport default HomePage;","map":null,"metadata":{},"sourceType":"module"}