{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jacksonmurphey/Desktop/NEXTJS/nextjs-meetupApp/pages/index.js\";\n//domain-name.com/ \n//This is our root route. \n// import Layout from '../components/layout/Layout' //NOTE: Moved this to _app.js to wrap our whole componet. \nimport MeetupList from '../components/meetups/MeetupList';\nimport { useEffect, useState } from 'react';\nconst DUMMYDATA = [{\n  id: 'm1',\n  title: 'First Meetup',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/8/89/Parthenon.at.Nashville.Tenenssee.01.jpg',\n  address: '5555 Address ave. Nashville, TN',\n  description: 'Test meet description'\n}, {\n  id: 'm2',\n  title: 'Second Meetup',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/ab/Buildings-1804479_1920.jpg/1280px-Buildings-1804479_1920.jpg',\n  address: '1111 Address ave. Chicage, IL',\n  description: 'Test2 meet description'\n}];\n\nconst HomePage = props => {\n  //Since we are running the 'getStaticProps()' function below, we no longer need to manage state, or use useEffect()\n  // const [loadedMeetups, setLoadedMeetups] = useState([])\n  // useEffect(() => {\n  //     //fetch request\n  //     setLoadedMeetups(DUMMYDATA)\n  // }, [])\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}; //alternative solution for getStaticProps()\n//This solution always runs on the server side on deployment\n//Only use this is you need access to request/response data. or if your data changes very frequently\n// export const getServerSideProps = async (context) => {\n//     const req = context.req\n//     const res = context.res\n//     //fetch data from API here.\n//     return {\n//         props: {\n//             meetups: DUMMYDATA\n//         }\n//     }\n// }\n//if you dont have data that changes frequently, then getStaticProps is more efficient.\n//static generation   alternatively :(SSG)-static site generation\n//below function only works in our pages. This allows you to load data before rendering \n//this code will never run on our clients side.\n\n\nexport const getStaticProps = async () => {\n  //fetch data from API here\n  //you must always return an obj. \n  return {\n    props: {\n      meetups: DUMMYDATA\n    },\n    revalidate: 100 //# of seconds NEXTJS will wait till it regenerates this page. This ensures your data is never older than 10seconds, you can set to any time-frame\n\n  };\n};\nexport default HomePage;","map":{"version":3,"sources":["/Users/jacksonmurphey/Desktop/NEXTJS/nextjs-meetupApp/pages/index.js"],"names":["MeetupList","useEffect","useState","DUMMYDATA","id","title","image","address","description","HomePage","props","meetups","getStaticProps","revalidate"],"mappings":";;AAAA;AACA;AAGA;AACA,OAAOA,UAAP,MAAuB,kCAAvB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAGA,MAAMC,SAAS,GAAG,CACd;AACIC,EAAAA,EAAE,EAAE,IADR;AAEIC,EAAAA,KAAK,EAAE,cAFX;AAGIC,EAAAA,KAAK,EAAE,6FAHX;AAIIC,EAAAA,OAAO,EAAE,iCAJb;AAKIC,EAAAA,WAAW,EAAE;AALjB,CADc,EAQd;AACIJ,EAAAA,EAAE,EAAE,IADR;AAEIC,EAAAA,KAAK,EAAE,eAFX;AAGIC,EAAAA,KAAK,EAAE,wHAHX;AAIIC,EAAAA,OAAO,EAAE,+BAJb;AAKIC,EAAAA,WAAW,EAAE;AALjB,CARc,CAAlB;;AAoBA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AAIA,sBACI,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAbD,C,CAeA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;;AACA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACtC;AACA;AACA,SAAO;AACHF,IAAAA,KAAK,EAAE;AACHC,MAAAA,OAAO,EAAER;AADN,KADJ;AAIHU,IAAAA,UAAU,EAAE,GAJT,CAIa;;AAJb,GAAP;AAMH,CATM;AAWP,eAAeJ,QAAf","sourcesContent":["//domain-name.com/ \n//This is our root route. \n\n\n// import Layout from '../components/layout/Layout' //NOTE: Moved this to _app.js to wrap our whole componet. \nimport MeetupList from '../components/meetups/MeetupList'\nimport { useEffect, useState } from 'react'\n\n\nconst DUMMYDATA = [\n    {\n        id: 'm1',\n        title: 'First Meetup',\n        image: 'https://upload.wikimedia.org/wikipedia/commons/8/89/Parthenon.at.Nashville.Tenenssee.01.jpg',\n        address: '5555 Address ave. Nashville, TN',\n        description: 'Test meet description'\n    },\n    {\n        id: 'm2',\n        title: 'Second Meetup',\n        image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/ab/Buildings-1804479_1920.jpg/1280px-Buildings-1804479_1920.jpg',\n        address: '1111 Address ave. Chicage, IL',\n        description: 'Test2 meet description'\n    }\n]\n\n\n\n\nconst HomePage = (props) => {\n    //Since we are running the 'getStaticProps()' function below, we no longer need to manage state, or use useEffect()\n    // const [loadedMeetups, setLoadedMeetups] = useState([])\n    // useEffect(() => {\n    //     //fetch request\n    //     setLoadedMeetups(DUMMYDATA)\n    // }, [])\n\n\n\n    return (\n        <MeetupList meetups={props.meetups} />\n    )\n}\n\n//alternative solution for getStaticProps()\n//This solution always runs on the server side on deployment\n//Only use this is you need access to request/response data. or if your data changes very frequently\n// export const getServerSideProps = async (context) => {\n//     const req = context.req\n//     const res = context.res\n\n//     //fetch data from API here.\n\n//     return {\n//         props: {\n//             meetups: DUMMYDATA\n//         }\n//     }\n// }\n\n//if you dont have data that changes frequently, then getStaticProps is more efficient.\n\n//static generation   alternatively :(SSG)-static site generation\n//below function only works in our pages. This allows you to load data before rendering \n//this code will never run on our clients side.\nexport const getStaticProps = async () => {\n    //fetch data from API here\n    //you must always return an obj. \n    return {\n        props: {\n            meetups: DUMMYDATA\n        },\n        revalidate: 100 //# of seconds NEXTJS will wait till it regenerates this page. This ensures your data is never older than 10seconds, you can set to any time-frame\n    }\n}\n\nexport default HomePage"]},"metadata":{},"sourceType":"module"}